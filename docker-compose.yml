version: "3.3"

services:

    logstash:
        image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION:-5.5.1}
        hostname: logstash
        ports:
          - "12201:12201/udp"
        networks:
            - logging
        volumes:
            - ./elk/logstash/config/pipeline:/usr/share/logstash/pipeline

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-5.5.1}
        hostname: elasticsearch
        environment:
            - cluster.name=docker-cluster
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
              soft: -1
              hard: -1
        ports:
            - 9200:9200
        volumes:
            - elasticsearchData:/usr/share/elasticsearch/data
        networks:
            - logging
        deploy:
          resources:
            limits:
              memory: 1g

    elasticsearch2:
        image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-5.5.1}
        environment:
            - cluster.name=docker-cluster
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - "discovery.zen.ping.unicast.hosts=elasticsearch"
        ulimits:
            memlock:
              soft: -1
              hard: -1
        volumes:
            - elasticsearchData2:/usr/share/elasticsearch/data
        networks:
            - logging
        deploy:
          resources:
            limits:
              memory: 1g

    kibana:
        image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-5.5.1}
        hostname: kibana
        ports:
            - 5601:5601
        networks:
            - logging
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200

    metricbeat:
        image: quay.io/shazchaudhry/docker-metricbeat:${ELASTIC_VERSION:-5.5.1}
        volumes:
          - metricbeatData:/usr/share/metricbeat/data
          - /proc:/hostfs/proc:ro
          - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
          - /:/hostfs:ro
          - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - logging
        environment:
          - HOST=elasticsearch
          - PORT=9200
          - PROTOCOL=http
          - USERNAME=elastic
          - PASSWORD=changeme
        deploy:
            mode: global
        command: metricbeat -e  -system.hostfs=/hostfs

networks:
    logging:

volumes:
    elasticsearchData:
    elasticsearchData2:
    metricbeatData:
