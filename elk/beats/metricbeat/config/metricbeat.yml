metricbeat.modules:

#------------------------------- System Module -------------------------------
- module: system
  metricsets: ["cpu", "load", "memory", "network", "process", "process_summary", "core", "diskio", "socket"]
  processes: ['.*']
  process.include_top_n:
    by_cpu: 5      # include top 5 processes by CPU
    by_memory: 5   # include top 5 processes by memory
  period: 10s
  cpu.metrics:  ["percentages"]
  core.metrics: ["percentages"]

- module: system
  period: 1m
  metricsets:
    - filesystem
    - fsstat
  processors:
  - drop_event.when.regexp:
      system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

- module: system
  period: 15m
  metricsets:
    - uptime



#------------------------------- Docker Module -------------------------------
- module: docker
  metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network"]
  hosts: ["unix:///var/run/docker.sock"]
  enabled: true
  period: 10s

#-------------------------------- Autodiscovery -------------------------------
# https://www.elastic.co/blog/brewing-in-beats-autodiscovery-with-docker
# metricbeat.autodiscover:
#   providers:
#     - type: docker
#       templates:
#         - condition:
#             equals.docker.container.image: redis
#           config:
#             - module: redis
#               metricsets: ["info", "keyspace"]
#               hosts: "${data.host}:${data.port}"
#         - condition:
#             equals.docker.container.image: haproxy
#           config:
#             - module: haproxy
#               metricsets: ["info", "stat"]
#               hosts: "${data.host}:${data.port}"
#         - condition:
#             equals.docker.container.image: kafka
#           config:
#             - module: kafka
#               metricsets: ["partition"]
#               hosts: "${data.host}:${data.port}"
#         - condition:
#             equals.docker.container.image: prometheus
#           config:
#             - module: prometheus
#               metricsets: ["stats"]
#               period: 10s
#               hosts: "${data.host}:${data.port}"
#               metrics_path: /metrics
#         - condition:
#             equals.docker.container.image: rabbitmq
#           config:
#             - module: rabbitmq
#               metricsets: ["node"]
#               period: 10s
#               hosts: "${data.host}:${data.port}"
#               metrics_path: /metrics
#               username: guest
#               password: guest

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  hosts: ["elasticsearch:9200"]
  username: elastic
  password: changeme

#============================== Dashboards =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here, or by using the `-setup` CLI flag.
setup.dashboards.enabled: true
setup.kibana:
  host: "kibana:5601"
  username: elastic
  password: changeme
